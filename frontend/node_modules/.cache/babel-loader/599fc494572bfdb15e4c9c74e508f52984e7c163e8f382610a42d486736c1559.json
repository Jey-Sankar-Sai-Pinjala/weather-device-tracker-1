{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\weather-device-tracker\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, CircleMarker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\n\n// Fix leaflet icon URLs\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow\n});\n\n// âœ… Helper to parse 'DD-MM-YYYY HH:mm:ss'\nfunction parseCustomDate(str) {\n  const [datePart, timePart] = str.split(' ');\n  const [day, month, year] = datePart.split('-').map(Number);\n  const [hour, minute, second] = timePart.split(':').map(Number);\n  return new Date(year, month - 1, day, hour, minute, second);\n}\nexport default function App() {\n  _s();\n  var _timeSeries$find;\n  const [positions, setPositions] = useState([]);\n  const [uniqueMonths, setUniqueMonths] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [timeSeries, setTimeSeries] = useState([]);\n  const [highlightTime, setHighlightTime] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/positions').then(response => {\n      const data = response.data;\n      const months = [...new Set(data.map(p => p.obsTime.slice(6, 9)))]; // MM-YYYY\n      setUniqueMonths(months);\n      if (months.length > 0) setCurrentMonth(months[0]);\n    }).catch(error => console.error('Error fetching months:', error));\n  }, []);\n  useEffect(() => {\n    if (!currentMonth) return;\n    axios.get(`http://localhost:5000/api/positions?month=${currentMonth}`).then(response => {\n      setPositions(response.data);\n    }).catch(error => console.error('Error fetching month positions:', error));\n  }, [currentMonth]);\n  const handleMarkerClick = pos => {\n    setSelected(pos);\n    setHighlightTime(pos.obsTime);\n    axios.get(`http://localhost:5000/api/timeseries`).then(res => {\n      const allSeries = res.data;\n      const clickedTime = parseCustomDate(pos.obsTime);\n      const rangeStart = new Date(clickedTime);\n      const rangeEnd = new Date(clickedTime);\n      rangeStart.setDate(rangeStart.getDate() - 3);\n      rangeEnd.setDate(rangeEnd.getDate() + 3);\n      const nearby = allSeries.filter(p => {\n        const time = new Date(p.time);\n        return time >= rangeStart && time <= rangeEnd;\n      });\n      setTimeSeries(nearby);\n    }).catch(err => console.error('Error fetching timeseries:', err));\n  };\n  const polyline = positions.map(p => [p.lat, p.lon]);\n  const start = positions[0];\n  const end = positions[positions.length - 1];\n  const middle = positions.slice(1, -1);\n  const chartData = {\n    datasets: [{\n      label: 'Barometric Pressure',\n      data: timeSeries.map(p => ({\n        x: new Date(p.time),\n        y: p.pressure\n      })),\n      borderColor: '#00BFFF',\n      backgroundColor: '#1E90FF',\n      pointRadius: 2,\n      pointHoverRadius: 5,\n      fill: false,\n      tension: 0.4\n    }, {\n      label: 'Selected Time',\n      data: highlightTime ? [{\n        x: parseCustomDate(highlightTime),\n        y: ((_timeSeries$find = timeSeries.find(p => {\n          const highlight = parseCustomDate(highlightTime);\n          const time = new Date(p.time);\n          return time.getTime() === highlight.getTime();\n        })) === null || _timeSeries$find === void 0 ? void 0 : _timeSeries$find.pressure) || null\n      }] : [],\n      pointBackgroundColor: 'red',\n      pointBorderColor: 'red',\n      pointRadius: 5,\n      showLine: false\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'dd-MM-yyyy HH:mm',\n          displayFormats: {\n            day: 'yyyy-MM-dd',\n            hour: 'MMM d, HH:mm'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Observation Time'\n        },\n        grid: {\n          color: '#ccc'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Barometric Pressure (hPa)'\n        },\n        grid: {\n          color: '#ccc'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          boxWidth: 12,\n          boxHeight: 8\n        }\n      },\n      tooltip: {\n        mode: 'nearest',\n        intersect: false\n      }\n    },\n    elements: {\n      point: {\n        borderWidth: 1\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '2rem',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: currentMonth,\n        onChange: e => setCurrentMonth(e.target.value),\n        children: uniqueMonths.map((m, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: m,\n          children: m\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [8.74, 69.15],\n        zoom: 5,\n        style: {\n          height: '600px',\n          borderRadius: '1rem',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: polyline,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), start && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [start.lat, start.lon],\n          icon: L.icon({\n            iconUrl: 'https://maps.google.com/mapfiles/ms/icons/green-dot.png',\n            iconSize: [25, 41],\n            iconAnchor: [12, 41]\n          }),\n          eventHandlers: {\n            click: () => handleMarkerClick(start)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Start: \", start.fixTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), end && start !== end && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [end.lat, end.lon],\n          icon: L.icon({\n            iconUrl: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n            iconSize: [25, 41],\n            iconAnchor: [12, 41]\n          }),\n          eventHandlers: {\n            click: () => handleMarkerClick(end)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"End: \", end.fixTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), middle.map((pos, i) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [pos.lat, pos.lon],\n          pathOptions: {\n            color: 'yellow'\n          },\n          radius: 6,\n          eventHandlers: {\n            click: () => handleMarkerClick(pos)\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Latitude:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 16\n          }, this), \" \", selected.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Longitude:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 16\n          }, this), \" \", selected.lon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fix Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 16\n          }, this), \" \", selected.fixTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Obs Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 16\n          }, this), \" \", selected.obsTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Barometric Pressure (\\xB13 days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a marker on the map to view pressure data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2HXP5OQ+pzoxsiHrHgB6Z9MwFuA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MapContainer","TileLayer","Polyline","Marker","Popup","CircleMarker","useState","useEffect","axios","L","markerIcon2x","markerIcon","markerShadow","Line","Chart","ChartJS","TimeScale","LinearScale","PointElement","LineElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","parseCustomDate","str","datePart","timePart","split","day","month","year","map","Number","hour","minute","second","Date","App","_s","_timeSeries$find","positions","setPositions","uniqueMonths","setUniqueMonths","currentMonth","setCurrentMonth","selected","setSelected","timeSeries","setTimeSeries","highlightTime","setHighlightTime","get","then","response","data","months","Set","p","obsTime","slice","length","catch","error","console","handleMarkerClick","pos","res","allSeries","clickedTime","rangeStart","rangeEnd","setDate","getDate","nearby","filter","time","err","polyline","lat","lon","start","end","middle","chartData","datasets","label","x","y","pressure","borderColor","backgroundColor","pointRadius","pointHoverRadius","fill","tension","find","highlight","getTime","pointBackgroundColor","pointBorderColor","showLine","chartOptions","responsive","maintainAspectRatio","scales","type","unit","tooltipFormat","displayFormats","title","display","text","grid","color","plugins","legend","position","labels","boxWidth","boxHeight","tooltip","mode","intersect","elements","point","borderWidth","style","gap","padding","children","flex","value","onChange","e","target","m","i","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","height","borderRadius","marginTop","url","attribution","icon","iconSize","iconAnchor","eventHandlers","click","fixTime","pathOptions","radius","options","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/weather-device-tracker/frontend/src/App.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Polyline, Marker, Popup, CircleMarker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  TimeScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\n\n// Fix leaflet icon URLs\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow,\n});\n\n// âœ… Helper to parse 'DD-MM-YYYY HH:mm:ss'\nfunction parseCustomDate(str) {\n  const [datePart, timePart] = str.split(' ');\n  const [day, month, year] = datePart.split('-').map(Number);\n  const [hour, minute, second] = timePart.split(':').map(Number);\n  return new Date(year, month - 1, day, hour, minute, second);\n}\n\nexport default function App() {\n  const [positions, setPositions] = useState([]);\n  const [uniqueMonths, setUniqueMonths] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [timeSeries, setTimeSeries] = useState([]);\n  const [highlightTime, setHighlightTime] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/positions')\n      .then(response => {\n        const data = response.data;\n        const months = [...new Set(data.map(p => p.obsTime.slice(6, 9)))]; // MM-YYYY\n        setUniqueMonths(months);\n        if (months.length > 0) setCurrentMonth(months[0]);\n      })\n      .catch(error => console.error('Error fetching months:', error));\n  }, []);\n\n  useEffect(() => {\n    if (!currentMonth) return;\n    axios.get(`http://localhost:5000/api/positions?month=${currentMonth}`)\n      .then(response => {\n        setPositions(response.data);\n      })\n      .catch(error => console.error('Error fetching month positions:', error));\n  }, [currentMonth]);\n\n  const handleMarkerClick = (pos) => {\n    setSelected(pos);\n    setHighlightTime(pos.obsTime);\n\n    axios.get(`http://localhost:5000/api/timeseries`)\n      .then(res => {\n        const allSeries = res.data;\n\n        const clickedTime = parseCustomDate(pos.obsTime);\n        const rangeStart = new Date(clickedTime);\n        const rangeEnd = new Date(clickedTime);\n        rangeStart.setDate(rangeStart.getDate() - 3);\n        rangeEnd.setDate(rangeEnd.getDate() + 3);\n\n        const nearby = allSeries.filter(p => {\n          const time = new Date(p.time);\n          return time >= rangeStart && time <= rangeEnd;\n        });\n\n        setTimeSeries(nearby);\n      })\n      .catch(err => console.error('Error fetching timeseries:', err));\n  };\n\n  const polyline = positions.map(p => [p.lat, p.lon]);\n  const start = positions[0];\n  const end = positions[positions.length - 1];\n  const middle = positions.slice(1, -1);\n\n  const chartData = {\n    datasets: [\n      {\n        label: 'Barometric Pressure',\n        data: timeSeries.map(p => ({\n          x: new Date(p.time),\n          y: p.pressure,\n        })),\n        borderColor: '#00BFFF',\n        backgroundColor: '#1E90FF',\n        pointRadius: 2,\n        pointHoverRadius: 5,\n        fill: false,\n        tension: 0.4,\n      },\n      {\n        label: 'Selected Time',\n        data: highlightTime ? [{\n          x: parseCustomDate(highlightTime),\n          y: timeSeries.find(p => {\n            const highlight = parseCustomDate(highlightTime);\n            const time = new Date(p.time);\n            return time.getTime() === highlight.getTime();\n          })?.pressure || null,\n        }] : [],\n        pointBackgroundColor: 'red',\n        pointBorderColor: 'red',\n        pointRadius: 5,\n        showLine: false,\n      }\n    ]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'dd-MM-yyyy HH:mm',\n          displayFormats: {\n            day: 'yyyy-MM-dd',\n            hour: 'MMM d, HH:mm'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Observation Time'\n        },\n        grid: {\n          color: '#ccc',\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Barometric Pressure (hPa)'\n        },\n        grid: {\n          color: '#ccc',\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          boxWidth: 12,\n          boxHeight: 8,\n        }\n      },\n      tooltip: {\n        mode: 'nearest',\n        intersect: false,\n      }\n    },\n    elements: {\n      point: {\n        borderWidth: 1,\n      }\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', gap: '2rem', padding: '2rem' }}>\n      <div style={{ flex: 1 }}>\n        <select value={currentMonth} onChange={(e) => setCurrentMonth(e.target.value)}>\n          {uniqueMonths.map((m, i) => (\n            <option key={i} value={m}>{m}</option>\n          ))}\n        </select>\n\n        <MapContainer center={[8.74, 69.15]} zoom={5} style={{ height: '600px', borderRadius: '1rem', marginTop: '1rem' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; OpenStreetMap contributors\"\n          />\n          <Polyline positions={polyline} color=\"red\" />\n          {start && (\n            <Marker\n              position={[start.lat, start.lon]}\n              icon={L.icon({ iconUrl: 'https://maps.google.com/mapfiles/ms/icons/green-dot.png', iconSize: [25, 41], iconAnchor: [12, 41] })}\n              eventHandlers={{ click: () => handleMarkerClick(start) }}\n            >\n              <Popup>Start: {start.fixTime}</Popup>\n            </Marker>\n          )}\n          {end && start !== end && (\n            <Marker\n              position={[end.lat, end.lon]}\n              icon={L.icon({ iconUrl: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', iconSize: [25, 41], iconAnchor: [12, 41] })}\n              eventHandlers={{ click: () => handleMarkerClick(end) }}\n            >\n              <Popup>End: {end.fixTime}</Popup>\n            </Marker>\n          )}\n          {middle.map((pos, i) => (\n            <CircleMarker\n              key={i}\n              center={[pos.lat, pos.lon]}\n              pathOptions={{ color: 'yellow' }}\n              radius={6}\n              eventHandlers={{ click: () => handleMarkerClick(pos) }}\n            />\n          ))}\n        </MapContainer>\n      </div>\n\n      <div style={{ flex: 1 }}>\n        {selected ? (\n          <div>\n            <h2>Selected Point</h2>\n            <p><strong>Latitude:</strong> {selected.lat}</p>\n            <p><strong>Longitude:</strong> {selected.lon}</p>\n            <p><strong>Fix Time:</strong> {selected.fixTime}</p>\n            <p><strong>Obs Time:</strong> {selected.obsTime}</p>\n            <div style={{ marginTop: '2rem' }}>\n              <h3>Barometric Pressure (Â±3 days)</h3>\n              <div style={{ height: '400px' }}>\n                <Line data={chartData} options={chartOptions} />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p>Select a marker on the map to view pressure data.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}