{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\weather-device-tracker\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, CircleMarker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend } from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend, annotationPlugin);\n\n// Fix Leaflet icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow\n});\nexport default function App() {\n  _s();\n  const [positions, setPositions] = useState([]);\n  const [uniqueMonths, setUniqueMonths] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [timeSeries, setTimeSeries] = useState([]);\n  const [highlightTime, setHighlightTime] = useState(null);\n  const chartRef = useRef();\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/positions').then(response => {\n      const data = response.data;\n      const months = [...new Set(data.map(p => p.obsTime.slice(3, 10)))]; // MM-YYYY\n      setUniqueMonths(months);\n      if (months.length > 0) setCurrentMonth(months[0]);\n    }).catch(error => console.error('Error fetching months:', error));\n  }, []);\n  useEffect(() => {\n    if (!currentMonth) return;\n    axios.get(`http://localhost:5000/api/positions?month=${currentMonth}`).then(response => setPositions(response.data)).catch(error => console.error('Error fetching positions:', error));\n  }, [currentMonth]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/timeseries').then(res => {\n      const series = res.data.map(p => ({\n        x: new Date(p.time),\n        y: p.pressure\n      }));\n      setTimeSeries(series);\n    }).catch(err => console.error('Error fetching time series:', err));\n  }, []);\n  const handleMarkerClick = pos => {\n    setSelected(pos);\n    const targetTime = new Date(pos.fixTime);\n    setHighlightTime(targetTime);\n\n    // Scroll chart to targetTime\n    if (chartRef.current) {\n      const chart = chartRef.current;\n      chart.options.scales.x.min = new Date(targetTime.getTime() - 30 * 60 * 1000); // -30 min\n      chart.options.scales.x.max = new Date(targetTime.getTime() + 30 * 60 * 1000); // +30 min\n      chart.update();\n    }\n  };\n  const polyline = positions.map(p => [p.lat, p.lon]);\n  const start = positions[0];\n  const end = positions[positions.length - 1];\n  const middle = positions.slice(1, -1);\n  const chartData = {\n    datasets: [{\n      label: 'Barometric Pressure',\n      data: timeSeries,\n      borderColor: 'blue',\n      backgroundColor: 'lightblue',\n      tension: 0.3\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          tooltipFormat: 'dd-MM-yyyy HH:mm',\n          displayFormats: {\n            hour: 'HH:mm',\n            minute: 'HH:mm'\n          }\n        },\n        title: {\n          display: true,\n          text: 'Observation Time'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Barometric Pressure (hPa)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      annotation: {\n        annotations: highlightTime ? {\n          line1: {\n            type: 'line',\n            xMin: highlightTime,\n            xMax: highlightTime,\n            borderColor: 'red',\n            borderWidth: 2,\n            label: {\n              content: 'Selected',\n              enabled: true,\n              position: 'start',\n              backgroundColor: 'rgba(255,0,0,0.6)'\n            }\n          }\n        } : {}\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '2rem',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: currentMonth,\n          onChange: e => setCurrentMonth(e.target.value),\n          children: uniqueMonths.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [8.74, 69.15],\n        zoom: 5,\n        scrollWheelZoom: true,\n        style: {\n          height: '600px',\n          borderRadius: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: polyline,\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), start && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [start.lat, start.lon],\n          eventHandlers: {\n            click: () => handleMarkerClick(start)\n          },\n          icon: L.icon({\n            iconUrl: 'https://maps.google.com/mapfiles/ms/icons/green-dot.png',\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41]\n          }),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Start Point\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), start.fixTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), end && start !== end && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [end.lat, end.lon],\n          eventHandlers: {\n            click: () => handleMarkerClick(end)\n          },\n          icon: L.icon({\n            iconUrl: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41]\n          }),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"End Point\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 31\n            }, this), end.fixTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), middle.map((pos, index) => /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: [pos.lat, pos.lon],\n          pathOptions: {\n            color: 'yellow',\n            dashArray: '3'\n          },\n          radius: 6,\n          eventHandlers: {\n            click: () => handleMarkerClick(pos)\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Latitude:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 16\n          }, this), \" \", selected.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Longitude:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }, this), \" \", selected.lon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fix Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 16\n          }, this), \" \", selected.fixTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Obs Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this), \" \", selected.obsTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), timeSeries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '2rem',\n            height: '400px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Time Series: Barometric Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            ref: chartRef,\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a marker on the map to view details and time series.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pwxq4SN1o3ZFcFaSF8Nh7CZF8Hw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MapContainer","TileLayer","Polyline","Marker","Popup","CircleMarker","useState","useEffect","useRef","axios","L","markerIcon2x","markerIcon","markerShadow","Line","Chart","ChartJS","TimeScale","LinearScale","PointElement","LineElement","Tooltip","Legend","annotationPlugin","jsxDEV","_jsxDEV","register","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","App","_s","positions","setPositions","uniqueMonths","setUniqueMonths","currentMonth","setCurrentMonth","selected","setSelected","timeSeries","setTimeSeries","highlightTime","setHighlightTime","chartRef","get","then","response","data","months","Set","map","p","obsTime","slice","length","catch","error","console","res","series","x","Date","time","y","pressure","err","handleMarkerClick","pos","targetTime","fixTime","current","chart","options","scales","min","getTime","max","update","polyline","lat","lon","start","end","middle","chartData","datasets","label","borderColor","backgroundColor","tension","chartOptions","responsive","maintainAspectRatio","type","tooltipFormat","displayFormats","hour","minute","title","display","text","plugins","legend","position","annotation","annotations","line1","xMin","xMax","borderWidth","content","enabled","style","gap","padding","children","flex","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","month","index","center","zoom","scrollWheelZoom","height","borderRadius","url","attribution","color","eventHandlers","click","icon","iconSize","iconAnchor","popupAnchor","shadowSize","pathOptions","dashArray","radius","marginTop","ref","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/weather-device-tracker/frontend/src/App.jsx"],"sourcesContent":["import { MapContainer, TileLayer, Polyline, Marker, Popup, CircleMarker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  TimeScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\n\nChartJS.register(TimeScale, LinearScale, PointElement, LineElement, Tooltip, Legend, annotationPlugin);\n\n// Fix Leaflet icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow,\n});\n\nexport default function App() {\n  const [positions, setPositions] = useState([]);\n  const [uniqueMonths, setUniqueMonths] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [timeSeries, setTimeSeries] = useState([]);\n  const [highlightTime, setHighlightTime] = useState(null);\n\n  const chartRef = useRef();\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/positions')\n      .then(response => {\n        const data = response.data;\n        const months = [...new Set(data.map(p => p.obsTime.slice(3, 10)))]; // MM-YYYY\n        setUniqueMonths(months);\n        if (months.length > 0) setCurrentMonth(months[0]);\n      })\n      .catch(error => console.error('Error fetching months:', error));\n  }, []);\n\n  useEffect(() => {\n    if (!currentMonth) return;\n    axios.get(`http://localhost:5000/api/positions?month=${currentMonth}`)\n      .then(response => setPositions(response.data))\n      .catch(error => console.error('Error fetching positions:', error));\n  }, [currentMonth]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/timeseries')\n      .then(res => {\n        const series = res.data.map(p => ({\n          x: new Date(p.time),\n          y: p.pressure\n        }));\n        setTimeSeries(series);\n      })\n      .catch(err => console.error('Error fetching time series:', err));\n  }, []);\n\n  const handleMarkerClick = (pos) => {\n    setSelected(pos);\n    const targetTime = new Date(pos.fixTime);\n    setHighlightTime(targetTime);\n\n    // Scroll chart to targetTime\n    if (chartRef.current) {\n      const chart = chartRef.current;\n      chart.options.scales.x.min = new Date(targetTime.getTime() - 30 * 60 * 1000); // -30 min\n      chart.options.scales.x.max = new Date(targetTime.getTime() + 30 * 60 * 1000); // +30 min\n      chart.update();\n    }\n  };\n\n  const polyline = positions.map(p => [p.lat, p.lon]);\n  const start = positions[0];\n  const end = positions[positions.length - 1];\n  const middle = positions.slice(1, -1);\n\n  const chartData = {\n    datasets: [{\n      label: 'Barometric Pressure',\n      data: timeSeries,\n      borderColor: 'blue',\n      backgroundColor: 'lightblue',\n      tension: 0.3,\n    }],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          tooltipFormat: 'dd-MM-yyyy HH:mm',\n          displayFormats: { hour: 'HH:mm', minute: 'HH:mm' },\n        },\n        title: {\n          display: true,\n          text: 'Observation Time',\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Barometric Pressure (hPa)',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      annotation: {\n        annotations: highlightTime ? {\n          line1: {\n            type: 'line',\n            xMin: highlightTime,\n            xMax: highlightTime,\n            borderColor: 'red',\n            borderWidth: 2,\n            label: {\n              content: 'Selected',\n              enabled: true,\n              position: 'start',\n              backgroundColor: 'rgba(255,0,0,0.6)'\n            }\n          }\n        } : {}\n      }\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', gap: '2rem', padding: '2rem' }}>\n      <div style={{ flex: 1 }}>\n        <div style={{ marginBottom: '1rem' }}>\n          <label>Select Month: </label>\n          <select value={currentMonth} onChange={(e) => setCurrentMonth(e.target.value)}>\n            {uniqueMonths.map((month, index) => (\n              <option key={index} value={month}>{month}</option>\n            ))}\n          </select>\n        </div>\n\n        <MapContainer center={[8.74, 69.15]} zoom={5} scrollWheelZoom={true} style={{ height: '600px', borderRadius: '1rem' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; OpenStreetMap contributors\"\n          />\n          <Polyline positions={polyline} color=\"red\" />\n\n          {start && (\n            <Marker position={[start.lat, start.lon]} eventHandlers={{ click: () => handleMarkerClick(start) }}\n              icon={L.icon({\n                iconUrl: 'https://maps.google.com/mapfiles/ms/icons/green-dot.png',\n                iconSize: [25, 41], iconAnchor: [12, 41],\n                popupAnchor: [1, -34], shadowSize: [41, 41],\n              })}>\n              <Popup>Start Point<br />{start.fixTime}</Popup>\n            </Marker>\n          )}\n\n          {end && start !== end && (\n            <Marker position={[end.lat, end.lon]} eventHandlers={{ click: () => handleMarkerClick(end) }}\n              icon={L.icon({\n                iconUrl: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n                iconSize: [25, 41], iconAnchor: [12, 41],\n                popupAnchor: [1, -34], shadowSize: [41, 41],\n              })}>\n              <Popup>End Point<br />{end.fixTime}</Popup>\n            </Marker>\n          )}\n\n          {middle.map((pos, index) => (\n            <CircleMarker\n              key={index}\n              center={[pos.lat, pos.lon]}\n              pathOptions={{ color: 'yellow', dashArray: '3' }}\n              radius={6}\n              eventHandlers={{ click: () => handleMarkerClick(pos) }}\n            />\n          ))}\n        </MapContainer>\n      </div>\n\n      <div style={{ flex: 1 }}>\n        {selected ? (\n          <div>\n            <h2>Selected Point</h2>\n            <p><strong>Latitude:</strong> {selected.lat}</p>\n            <p><strong>Longitude:</strong> {selected.lon}</p>\n            <p><strong>Fix Time:</strong> {selected.fixTime}</p>\n            <p><strong>Obs Time:</strong> {selected.obsTime}</p>\n\n            {timeSeries.length > 0 && (\n              <div style={{ marginTop: '2rem', height: '400px' }}>\n                <h3>Time Series: Barometric Pressure</h3>\n                <Line ref={chartRef} data={chartData} options={chartOptions} />\n              </div>\n            )}\n          </div>\n        ) : (\n          <p>Select a marker on the map to view details and time series.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,QAAQ,eAAe;AAC9F,OAAO,0BAA0B;AACjC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,SAAS,EACTC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzDT,OAAO,CAACU,QAAQ,CAACT,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,gBAAgB,CAAC;;AAEtG;AACA,OAAOb,CAAC,CAACiB,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CpB,CAAC,CAACiB,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAErB,YAAY;EAC3BsB,OAAO,EAAErB,UAAU;EACnBsB,SAAS,EAAErB;AACb,CAAC,CAAC;AAEF,eAAe,SAASsB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM2C,QAAQ,GAAGzC,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACyC,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1B,MAAMC,MAAM,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,IAAI,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpEnB,eAAe,CAACc,MAAM,CAAC;MACvB,IAAIA,MAAM,CAACM,MAAM,GAAG,CAAC,EAAElB,eAAe,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENvD,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,YAAY,EAAE;IACnBhC,KAAK,CAACyC,GAAG,CAAC,6CAA6CT,YAAY,EAAE,CAAC,CACnEU,IAAI,CAACC,QAAQ,IAAId,YAAY,CAACc,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7CQ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACrB,YAAY,CAAC,CAAC;EAElBlC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACyC,GAAG,CAAC,sCAAsC,CAAC,CAC9CC,IAAI,CAACa,GAAG,IAAI;MACX,MAAMC,MAAM,GAAGD,GAAG,CAACX,IAAI,CAACG,GAAG,CAACC,CAAC,KAAK;QAChCS,CAAC,EAAE,IAAIC,IAAI,CAACV,CAAC,CAACW,IAAI,CAAC;QACnBC,CAAC,EAAEZ,CAAC,CAACa;MACP,CAAC,CAAC,CAAC;MACHxB,aAAa,CAACmB,MAAM,CAAC;IACvB,CAAC,CAAC,CACDJ,KAAK,CAACU,GAAG,IAAIR,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAES,GAAG,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IACjC7B,WAAW,CAAC6B,GAAG,CAAC;IAChB,MAAMC,UAAU,GAAG,IAAIP,IAAI,CAACM,GAAG,CAACE,OAAO,CAAC;IACxC3B,gBAAgB,CAAC0B,UAAU,CAAC;;IAE5B;IACA,IAAIzB,QAAQ,CAAC2B,OAAO,EAAE;MACpB,MAAMC,KAAK,GAAG5B,QAAQ,CAAC2B,OAAO;MAC9BC,KAAK,CAACC,OAAO,CAACC,MAAM,CAACb,CAAC,CAACc,GAAG,GAAG,IAAIb,IAAI,CAACO,UAAU,CAACO,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;MAC9EJ,KAAK,CAACC,OAAO,CAACC,MAAM,CAACb,CAAC,CAACgB,GAAG,GAAG,IAAIf,IAAI,CAACO,UAAU,CAACO,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;MAC9EJ,KAAK,CAACM,MAAM,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG/C,SAAS,CAACmB,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAAC4B,GAAG,EAAE5B,CAAC,CAAC6B,GAAG,CAAC,CAAC;EACnD,MAAMC,KAAK,GAAGlD,SAAS,CAAC,CAAC,CAAC;EAC1B,MAAMmD,GAAG,GAAGnD,SAAS,CAACA,SAAS,CAACuB,MAAM,GAAG,CAAC,CAAC;EAC3C,MAAM6B,MAAM,GAAGpD,SAAS,CAACsB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAErC,MAAM+B,SAAS,GAAG;IAChBC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,qBAAqB;MAC5BvC,IAAI,EAAER,UAAU;MAChBgD,WAAW,EAAE,MAAM;MACnBC,eAAe,EAAE,WAAW;MAC5BC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BnB,MAAM,EAAE;MACNb,CAAC,EAAE;QACDiC,IAAI,EAAE,MAAM;QACZ/B,IAAI,EAAE;UACJgC,aAAa,EAAE,kBAAkB;UACjCC,cAAc,EAAE;YAAEC,IAAI,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAQ;QACnD,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDrC,CAAC,EAAE;QACDmC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNH,OAAO,EAAE,IAAI;QACbI,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE;QACVC,WAAW,EAAEhE,aAAa,GAAG;UAC3BiE,KAAK,EAAE;YACLb,IAAI,EAAE,MAAM;YACZc,IAAI,EAAElE,aAAa;YACnBmE,IAAI,EAAEnE,aAAa;YACnB8C,WAAW,EAAE,KAAK;YAClBsB,WAAW,EAAE,CAAC;YACdvB,KAAK,EAAE;cACLwB,OAAO,EAAE,UAAU;cACnBC,OAAO,EAAE,IAAI;cACbR,QAAQ,EAAE,OAAO;cACjBf,eAAe,EAAE;YACnB;UACF;QACF,CAAC,GAAG,CAAC;MACP;IACF;EACF,CAAC;EAED,oBACErE,OAAA;IAAK6F,KAAK,EAAE;MAAEb,OAAO,EAAE,MAAM;MAAEc,GAAG,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5DhG,OAAA;MAAK6F,KAAK,EAAE;QAAEI,IAAI,EAAE;MAAE,CAAE;MAAAD,QAAA,gBACtBhG,OAAA;QAAK6F,KAAK,EAAE;UAAEK,YAAY,EAAE;QAAO,CAAE;QAAAF,QAAA,gBACnChG,OAAA;UAAAgG,QAAA,EAAO;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BtG,OAAA;UAAQuG,KAAK,EAAEvF,YAAa;UAACwF,QAAQ,EAAGC,CAAC,IAAKxF,eAAe,CAACwF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAP,QAAA,EAC3ElF,YAAY,CAACiB,GAAG,CAAC,CAAC4E,KAAK,EAAEC,KAAK,kBAC7B5G,OAAA;YAAoBuG,KAAK,EAAEI,KAAM;YAAAX,QAAA,EAAEW;UAAK,GAA3BC,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA+B,CAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENtG,OAAA,CAACzB,YAAY;QAACsI,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,CAAE;QAACC,IAAI,EAAE,CAAE;QAACC,eAAe,EAAE,IAAK;QAAClB,KAAK,EAAE;UAAEmB,MAAM,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAjB,QAAA,gBACpHhG,OAAA,CAACxB,SAAS;UACR0I,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAmC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFtG,OAAA,CAACvB,QAAQ;UAACmC,SAAS,EAAE+C,QAAS;UAACyD,KAAK,EAAC;QAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAE5CxC,KAAK,iBACJ9D,OAAA,CAACtB,MAAM;UAAC0G,QAAQ,EAAE,CAACtB,KAAK,CAACF,GAAG,EAAEE,KAAK,CAACD,GAAG,CAAE;UAACwD,aAAa,EAAE;YAAEC,KAAK,EAAEA,CAAA,KAAMvE,iBAAiB,CAACe,KAAK;UAAE,CAAE;UACjGyD,IAAI,EAAEtI,CAAC,CAACsI,IAAI,CAAC;YACX/G,OAAO,EAAE,yDAAyD;YAClEgH,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAAEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxCC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;UAC5C,CAAC,CAAE;UAAA3B,QAAA,eACHhG,OAAA,CAACrB,KAAK;YAAAqH,QAAA,GAAC,aAAW,eAAAhG,OAAA;cAAAmG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAACxC,KAAK,CAACZ,OAAO;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACT,EAEAvC,GAAG,IAAID,KAAK,KAAKC,GAAG,iBACnB/D,OAAA,CAACtB,MAAM;UAAC0G,QAAQ,EAAE,CAACrB,GAAG,CAACH,GAAG,EAAEG,GAAG,CAACF,GAAG,CAAE;UAACwD,aAAa,EAAE;YAAEC,KAAK,EAAEA,CAAA,KAAMvE,iBAAiB,CAACgB,GAAG;UAAE,CAAE;UAC3FwD,IAAI,EAAEtI,CAAC,CAACsI,IAAI,CAAC;YACX/G,OAAO,EAAE,wDAAwD;YACjEgH,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAAEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACxCC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;UAC5C,CAAC,CAAE;UAAA3B,QAAA,eACHhG,OAAA,CAACrB,KAAK;YAAAqH,QAAA,GAAC,WAAS,eAAAhG,OAAA;cAAAmG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAACvC,GAAG,CAACb,OAAO;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CACT,EAEAtC,MAAM,CAACjC,GAAG,CAAC,CAACiB,GAAG,EAAE4D,KAAK,kBACrB5G,OAAA,CAACpB,YAAY;UAEXiI,MAAM,EAAE,CAAC7D,GAAG,CAACY,GAAG,EAAEZ,GAAG,CAACa,GAAG,CAAE;UAC3B+D,WAAW,EAAE;YAAER,KAAK,EAAE,QAAQ;YAAES,SAAS,EAAE;UAAI,CAAE;UACjDC,MAAM,EAAE,CAAE;UACVT,aAAa,EAAE;YAAEC,KAAK,EAAEA,CAAA,KAAMvE,iBAAiB,CAACC,GAAG;UAAE;QAAE,GAJlD4D,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAENtG,OAAA;MAAK6F,KAAK,EAAE;QAAEI,IAAI,EAAE;MAAE,CAAE;MAAAD,QAAA,EACrB9E,QAAQ,gBACPlB,OAAA;QAAAgG,QAAA,gBACEhG,OAAA;UAAAgG,QAAA,EAAI;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBtG,OAAA;UAAAgG,QAAA,gBAAGhG,OAAA;YAAAgG,QAAA,EAAQ;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,QAAQ,CAAC0C,GAAG;QAAA;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDtG,OAAA;UAAAgG,QAAA,gBAAGhG,OAAA;YAAAgG,QAAA,EAAQ;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,QAAQ,CAAC2C,GAAG;QAAA;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDtG,OAAA;UAAAgG,QAAA,gBAAGhG,OAAA;YAAAgG,QAAA,EAAQ;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,QAAQ,CAACgC,OAAO;QAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDtG,OAAA;UAAAgG,QAAA,gBAAGhG,OAAA;YAAAgG,QAAA,EAAQ;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,QAAQ,CAACe,OAAO;QAAA;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEnDlF,UAAU,CAACe,MAAM,GAAG,CAAC,iBACpBnC,OAAA;UAAK6F,KAAK,EAAE;YAAEkC,SAAS,EAAE,MAAM;YAAEf,MAAM,EAAE;UAAQ,CAAE;UAAAhB,QAAA,gBACjDhG,OAAA;YAAAgG,QAAA,EAAI;UAAgC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCtG,OAAA,CAACX,IAAI;YAAC2I,GAAG,EAAExG,QAAS;YAACI,IAAI,EAAEqC,SAAU;YAACZ,OAAO,EAAEkB;UAAa;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAENtG,OAAA;QAAAgG,QAAA,EAAG;MAA2D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAClE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3F,EAAA,CA/LuBD,GAAG;AAAAuH,EAAA,GAAHvH,GAAG;AAAA,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}